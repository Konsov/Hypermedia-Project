openapi: 3.0.0
info:
  title: Eco Vibes API
  description: An API that allows user to obtain existing information of service,
    event and people from Eco Vibes company
  contact:
    name: Bianco_Consonni
    url: http://localhost:5000/pages/contact.html
    email: bianco_consonni@ecovibes.com
  license:
    name: Eco Vibes License
    url: http://license.foo.com
  version: 1.0.0
servers:
- url: https://hypproject1920.herokuapp.com/backend
  description: Production server (uses live data)
- url: https://localhost:5000/
  description: local server (uses test data)
paths:
  /person:
    get:
      description: Obtain information about the people working in the compnay
      operationId: personGET
      parameters:
      - name: bodyLimit
        in: query
        description: The amount of people returned
        required: false
        style: form
        explode: true
        schema:
          maximum: 20
          minimum: 6
          type: integer
          example: 15
      - name: pageLimit
        in: query
        description: The pages to return people info
        required: false
        style: form
        explode: true
        schema:
          maximum: 5
          minimum: 1
          type: integer
          example: 2
      responses:
        "200":
          description: Seccesful pull of people info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        "404":
          description: No person found
      x-swagger-router-controller: Default
  /person/{id}:
    get:
      description: Obtain information about specific person
      operationId: personIdGET
      parameters:
      - name: id
        in: path
        description: The ID of the person
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 6
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                allOf:
                - $ref: '#/components/schemas/Person'
                x-content-type: application/json
            application/xml:
              schema:
                type: object
                allOf:
                - $ref: '#/components/schemas/Person'
        "404":
          description: Person not found
      x-swagger-router-controller: Default
components:
  schemas:
    Person:
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: Mario Rossi
        age:
          type: integer
          example: 26
        role:
          type: string
          example: Head HR
        profession:
          type: string
          example: Manager HR
        short description:
          type: string
          example: Head of the HR office from the start of the company
        email:
          type: string
          example: mario.rossi@ecovibes.com
      description: Model containing the person info
      example:
        profession: Manager HR
        role: Head HR
        name: Mario Rossi
        short_description: Head of the HR office from the start of the company
        id: 4
        age: 26
        email: mario.rossi@ecovibes.com
